[{"path":"index.html","id":"home","chapter":"Home","heading":"Home","text":"website summer course “Introduction R Data Science” BEST 2024 program.","code":""},{"path":"index.html","id":"authors","chapter":"Home","heading":"Authors","text":"","code":""},{"path":"index.html","id":"instructor","chapter":"Home","heading":"Instructor","text":"Safiya N. Sirota, sns2189@cumc.columbia.edu","code":""},{"path":"index.html","id":"teaching-assistant","chapter":"Home","heading":"Teaching Assistant","text":"Pei Tian, pt2632@cumc.columbia.eduOffice Hours:  Wed 1:00pm - 2:00pm","code":""},{"path":"index.html","id":"contents","chapter":"Home","heading":"Contents","text":"","code":""},{"path":"index.html","id":"lectures","chapter":"Home","heading":"Lectures","text":"TBD","code":""},{"path":"index.html","id":"recitations","chapter":"Home","heading":"Recitations","text":"Recitation 1 - Basic SetupTBD","code":""},{"path":"index.html","id":"usage","chapter":"Home","heading":"Usage","text":"Open lecture notes follow steps complete objectives.question, please email pt2632@cumc.columbia.edu.","code":""},{"path":"recitation-1.html","id":"recitation-1","chapter":"1 Recitation 1","heading":"1 Recitation 1","text":"","code":""},{"path":"recitation-1.html","id":"objectives","chapter":"1 Recitation 1","heading":"1.1 Objectives","text":"Download R RStudioCreate R projectGet familiar .R script .Rmd notebookVariablesR Objects","code":""},{"path":"recitation-1.html","id":"download-softwares","chapter":"1 Recitation 1","heading":"1.2 Download Softwares","text":"","code":""},{"path":"recitation-1.html","id":"installing-r","chapter":"1 Recitation 1","heading":"1.2.1 Installing R","text":"","code":""},{"path":"recitation-1.html","id":"windows","chapter":"1 Recitation 1","heading":"1.2.1.1 Windows","text":"Go CRAN R Project website.Click link download R Windows.Click “base” link.Click “Download R Windows” link download installer.installer downloaded, open follow -screen instructions complete installation.","code":""},{"path":"recitation-1.html","id":"macos","chapter":"1 Recitation 1","heading":"1.2.1.2 macOS","text":"Go CRAN R Project website.Click link download R macOS.Click .pkg file link download installer.installer downloaded, open follow -screen instructions complete installation.","code":""},{"path":"recitation-1.html","id":"installing-rstudio","chapter":"1 Recitation 1","heading":"1.2.2 Installing RStudio","text":"","code":""},{"path":"recitation-1.html","id":"windows-1","chapter":"1 Recitation 1","heading":"1.2.2.1 Windows","text":"Go RStudio website.“Installers Supported Platforms” section, click link Windows download installer.installer downloaded, open follow -screen instructions complete installation.","code":""},{"path":"recitation-1.html","id":"macos-1","chapter":"1 Recitation 1","heading":"1.2.2.2 macOS","text":"Go RStudio website.“Installers Supported Platforms” section, click link macOS download installer.installer downloaded, open follow -screen instructions complete installation.","code":""},{"path":"recitation-1.html","id":"create-your-first-project","chapter":"1 Recitation 1","heading":"1.3 Create Your First Project","text":"Open RStudio: Launch RStudio installation.Create New Project:\nGo File > New Project.\nChoose New Directory, New Project.\nSelect folder computer want save project.\nClick Create Project.\nGo File > New Project.Choose New Directory, New Project.Select folder computer want save project.Click Create Project.sets new R project can start writing organizing R scripts data files.","code":""},{"path":"recitation-1.html","id":"different-files","chapter":"1 Recitation 1","heading":"1.4 Different Files","text":"","code":""},{"path":"recitation-1.html","id":"r-script","chapter":"1 Recitation 1","heading":"1.4.1 .R Script","text":".R files simple text files containing R code. used writing running R scripts, can include data analysis, data manipulation, plotting commands.Creating .R Script:\n1. RStudio, go File > New File > R Script.Write R code script editor.Write R code script editor.Save file .R extension.Save file .R extension.","code":""},{"path":"recitation-1.html","id":"rmd-rmarkdown","chapter":"1 Recitation 1","heading":"1.4.2 .Rmd Rmarkdown","text":".Rmd (R Markdown) files used creating dynamic documents combine code, text, visualizations. ideal reports, presentations, reproducible research.Creating .Rmd Notebook:\n1. RStudio, go File > New File > R Markdown.\n2. Choose type output (e.g., HTML, PDF, Word).\n3. Write code narrative text R Markdown editor.\n4. Use R code chunks (``{r}) embed R code. 5. Click theKnit` button generate final document.Keyboard Shortcuts: ","code":""},{"path":"recitation-1.html","id":"variables","chapter":"1 Recitation 1","heading":"1.5 Variables","text":"","code":""},{"path":"recitation-1.html","id":"coming-up-with-variable-names","chapter":"1 Recitation 1","heading":"1.5.1 Coming up with variable names","text":"Use concise meaningful names variables. Object names must start letter can contain letters, numbers, **** .\nBase R uses dots function names (ex: contrib.url()) class names (ex: data.frame). recommend snake_case can separate words .","code":""},{"path":"recitation-1.html","id":"numeric","chapter":"1 Recitation 1","heading":"1.5.2 Numeric","text":"Numeric variables store numbers can either integers doubles (floating-point numbers).","code":"\nx <- 42  # integer\ny = 3.14  # double\n# addition \nx + y## [1] 45.14\n# substraction\nx - y## [1] 38.86\n# multiplication\nx * y## [1] 131.88\n# division\nx / y## [1] 13.3758\n# mod\nx %% 9## [1] 6"},{"path":"recitation-1.html","id":"string","chapter":"1 Recitation 1","heading":"1.5.3 String","text":"String variables store text data created enclosing text quotes.","code":"\nname <- \"John Doe\"\nmessage <- \"Hello, world!\""},{"path":"recitation-1.html","id":"logical","chapter":"1 Recitation 1","heading":"1.5.4 Logical","text":"Logical variable store data value TRUE FALSE.","code":"\ncorrect = TRUE\ncorrect = T\nwrong = FALSE\nwrong = F"},{"path":"recitation-1.html","id":"r-objects","chapter":"1 Recitation 1","heading":"1.6 R Objects","text":"","code":""},{"path":"recitation-1.html","id":"tips","chapter":"1 Recitation 1","heading":"1.6.1 Tips","text":"know everything R programming following command:","code":"\n# help document for function\n?mean\n\n# help document for package\n??MASS"},{"path":"recitation-1.html","id":"vector","chapter":"1 Recitation 1","heading":"1.6.2 Vector","text":"Vectors one-dimensional arrays can hold numeric, string, logical data. created using c() function.","code":"\nnum_vector <- c(1, 2, 3, 4, 5)\nstr_vector <- c(\"apple\", \"banana\", \"cherry\")"},{"path":"recitation-1.html","id":"list","chapter":"1 Recitation 1","heading":"1.6.3 List","text":"Lists versatile data structures can hold different types data, including lists.","code":"\n# definition\nmy_list <- list(name = \"John\", age = 30, scores = c(90, 85, 88))\n# slice\nmy_list[1:2]## $name\n## [1] \"John\"\n## \n## $age\n## [1] 30\n# pull out element\nmy_list[[1]]## [1] \"John\"\nmy_list[[\"name\"]]## [1] \"John\"\nmy_list$name## [1] \"John\""},{"path":"recitation-1.html","id":"factor","chapter":"1 Recitation 1","heading":"1.6.4 Factor","text":"Factors used represent categorical data useful statistical modeling.","code":"\ncolors <- factor(c(\"red\", \"blue\", \"green\", \"blue\", \"red\"))\ncolors## [1] red   blue  green blue  red  \n## Levels: blue green red"},{"path":"recitation-1.html","id":"matrix","chapter":"1 Recitation 1","heading":"1.6.5 Matrix","text":"Matrices two-dimensional arrays hold numeric data. created using matrix() function.","code":"\nmy_matrix <- matrix(1:9, nrow = 3, ncol = 3)\nmy_matrix##      [,1] [,2] [,3]\n## [1,]    1    4    7\n## [2,]    2    5    8\n## [3,]    3    6    9"},{"path":"recitation-1.html","id":"dataframe","chapter":"1 Recitation 1","heading":"1.6.6 DataFrame","text":"DataFrames table-like structures can hold different types data columns, making ideal datasets.basics, able get started first R project, create different types files, understand fundamental data structures R.","code":"\ninstall.packages(\"nycflights13\")\nlibrary(nycflights13)\n\nflights## # A tibble: 336,776 × 19\n##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n##    <int> <int> <int>    <int>          <int>     <dbl>    <int>          <int>     <dbl>\n##  1  2013     1     1      517            515         2      830            819        11\n##  2  2013     1     1      533            529         4      850            830        20\n##  3  2013     1     1      542            540         2      923            850        33\n##  4  2013     1     1      544            545        -1     1004           1022       -18\n##  5  2013     1     1      554            600        -6      812            837       -25\n##  6  2013     1     1      554            558        -4      740            728        12\n##  7  2013     1     1      555            600        -5      913            854        19\n##  8  2013     1     1      557            600        -3      709            723       -14\n##  9  2013     1     1      557            600        -3      838            846        -8\n## 10  2013     1     1      558            600        -2      753            745         8\n## # ℹ 336,766 more rows\n## # ℹ 10 more variables: carrier <chr>, flight <int>, tailnum <chr>, origin <chr>, dest <chr>,\n## #   air_time <dbl>, distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>\n# To view the structure of the df\nstr(flights)## tibble [336,776 × 19] (S3: tbl_df/tbl/data.frame)\n##  $ year          : int [1:336776] 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...\n##  $ month         : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ...\n##  $ day           : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ...\n##  $ dep_time      : int [1:336776] 517 533 542 544 554 554 555 557 557 558 ...\n##  $ sched_dep_time: int [1:336776] 515 529 540 545 600 558 600 600 600 600 ...\n##  $ dep_delay     : num [1:336776] 2 4 2 -1 -6 -4 -5 -3 -3 -2 ...\n##  $ arr_time      : int [1:336776] 830 850 923 1004 812 740 913 709 838 753 ...\n##  $ sched_arr_time: int [1:336776] 819 830 850 1022 837 728 854 723 846 745 ...\n##  $ arr_delay     : num [1:336776] 11 20 33 -18 -25 12 19 -14 -8 8 ...\n##  $ carrier       : chr [1:336776] \"UA\" \"UA\" \"AA\" \"B6\" ...\n##  $ flight        : int [1:336776] 1545 1714 1141 725 461 1696 507 5708 79 301 ...\n##  $ tailnum       : chr [1:336776] \"N14228\" \"N24211\" \"N619AA\" \"N804JB\" ...\n##  $ origin        : chr [1:336776] \"EWR\" \"LGA\" \"JFK\" \"JFK\" ...\n##  $ dest          : chr [1:336776] \"IAH\" \"IAH\" \"MIA\" \"BQN\" ...\n##  $ air_time      : num [1:336776] 227 227 160 183 116 150 158 53 140 138 ...\n##  $ distance      : num [1:336776] 1400 1416 1089 1576 762 ...\n##  $ hour          : num [1:336776] 5 5 5 5 6 5 6 6 6 6 ...\n##  $ minute        : num [1:336776] 15 29 40 45 0 58 0 0 0 0 ...\n##  $ time_hour     : POSIXct[1:336776], format: \"2013-01-01 05:00:00\" \"2013-01-01 05:00:00\" \"2013-01-01 05:00:00\" ...\n# Summary stats of the numeric variables\nsummary(flights)##       year          month             day           dep_time    sched_dep_time\n##  Min.   :2013   Min.   : 1.000   Min.   : 1.00   Min.   :   1   Min.   : 106  \n##  1st Qu.:2013   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 907   1st Qu.: 906  \n##  Median :2013   Median : 7.000   Median :16.00   Median :1401   Median :1359  \n##  Mean   :2013   Mean   : 6.549   Mean   :15.71   Mean   :1349   Mean   :1344  \n##  3rd Qu.:2013   3rd Qu.:10.000   3rd Qu.:23.00   3rd Qu.:1744   3rd Qu.:1729  \n##  Max.   :2013   Max.   :12.000   Max.   :31.00   Max.   :2400   Max.   :2359  \n##                                                  NA's   :8255                 \n##    dep_delay          arr_time    sched_arr_time   arr_delay          carrier         \n##  Min.   : -43.00   Min.   :   1   Min.   :   1   Min.   : -86.000   Length:336776     \n##  1st Qu.:  -5.00   1st Qu.:1104   1st Qu.:1124   1st Qu.: -17.000   Class :character  \n##  Median :  -2.00   Median :1535   Median :1556   Median :  -5.000   Mode  :character  \n##  Mean   :  12.64   Mean   :1502   Mean   :1536   Mean   :   6.895                     \n##  3rd Qu.:  11.00   3rd Qu.:1940   3rd Qu.:1945   3rd Qu.:  14.000                     \n##  Max.   :1301.00   Max.   :2400   Max.   :2359   Max.   :1272.000                     \n##  NA's   :8255      NA's   :8713                  NA's   :9430                         \n##      flight       tailnum             origin              dest              air_time    \n##  Min.   :   1   Length:336776      Length:336776      Length:336776      Min.   : 20.0  \n##  1st Qu.: 553   Class :character   Class :character   Class :character   1st Qu.: 82.0  \n##  Median :1496   Mode  :character   Mode  :character   Mode  :character   Median :129.0  \n##  Mean   :1972                                                            Mean   :150.7  \n##  3rd Qu.:3465                                                            3rd Qu.:192.0  \n##  Max.   :8500                                                            Max.   :695.0  \n##                                                                          NA's   :9430   \n##     distance         hour           minute        time_hour                     \n##  Min.   :  17   Min.   : 1.00   Min.   : 0.00   Min.   :2013-01-01 05:00:00.00  \n##  1st Qu.: 502   1st Qu.: 9.00   1st Qu.: 8.00   1st Qu.:2013-04-04 13:00:00.00  \n##  Median : 872   Median :13.00   Median :29.00   Median :2013-07-03 10:00:00.00  \n##  Mean   :1040   Mean   :13.18   Mean   :26.23   Mean   :2013-07-03 05:22:54.64  \n##  3rd Qu.:1389   3rd Qu.:17.00   3rd Qu.:44.00   3rd Qu.:2013-10-01 07:00:00.00  \n##  Max.   :4983   Max.   :23.00   Max.   :59.00   Max.   :2013-12-31 23:00:00.00  \n## \n# Finding the dimensions of the df\ndim(flights)## [1] 336776     19\n# Mean calculation\nmean(flights$distance)## [1] 1039.913\n# Mean calculation with NA clean\nmean(flights$distance, na.rm = TRUE)## [1] 1039.913\n# Max value\nmax(flights$air_time)## [1] NA\n# Max value with NA clean\nmax(flights$air_time, na.rm = TRUE)## [1] 695\n# Unique value\nunique(flights$dest)##   [1] \"IAH\" \"MIA\" \"BQN\" \"ATL\" \"ORD\" \"FLL\" \"IAD\" \"MCO\" \"PBI\" \"TPA\" \"LAX\" \"SFO\" \"DFW\" \"BOS\"\n##  [15] \"LAS\" \"MSP\" \"DTW\" \"RSW\" \"SJU\" \"PHX\" \"BWI\" \"CLT\" \"BUF\" \"DEN\" \"SNA\" \"MSY\" \"SLC\" \"XNA\"\n##  [29] \"MKE\" \"SEA\" \"ROC\" \"SYR\" \"SRQ\" \"RDU\" \"CMH\" \"JAX\" \"CHS\" \"MEM\" \"PIT\" \"SAN\" \"DCA\" \"CLE\"\n##  [43] \"STL\" \"MYR\" \"JAC\" \"MDW\" \"HNL\" \"BNA\" \"AUS\" \"BTV\" \"PHL\" \"STT\" \"EGE\" \"AVL\" \"PWM\" \"IND\"\n##  [57] \"SAV\" \"CAK\" \"HOU\" \"LGB\" \"DAY\" \"ALB\" \"BDL\" \"MHT\" \"MSN\" \"GSO\" \"CVG\" \"BUR\" \"RIC\" \"GSP\"\n##  [71] \"GRR\" \"MCI\" \"ORF\" \"SAT\" \"SDF\" \"PDX\" \"SJC\" \"OMA\" \"CRW\" \"OAK\" \"SMF\" \"TUL\" \"TYS\" \"OKC\"\n##  [85] \"PVD\" \"DSM\" \"PSE\" \"BHM\" \"CAE\" \"HDN\" \"BZN\" \"MTJ\" \"EYW\" \"PSP\" \"ACK\" \"BGR\" \"ABQ\" \"ILM\"\n##  [99] \"MVY\" \"SBN\" \"LEX\" \"CHO\" \"TVC\" \"ANC\" \"LGA\""},{"path":"recitation-1.html","id":"some-spacing-conventions","chapter":"1 Recitation 1","heading":"1.7 Some Spacing Conventions","text":"Include spaces +, -, *, /Don’t put spaces around ^ (e.g., 3^2)Don’t put spaces around : $Include spaces commas (e.g., c(0, 1, 2))","code":""},{"path":"recitation-1.html","id":"other-resource","chapter":"1 Recitation 1","heading":"1.8 Other Resource","text":"page touches conventions discussed (’re interested): http://adv-r..co.nz/Style.htmlMore Basics Workflow: https://stat545.com/r-basics.html","code":""},{"path":"recitation-2.html","id":"recitation-2","chapter":"2 Recitation 2","heading":"2 Recitation 2","text":"Today learned…Pipe operatorsImporting dataNow ’ll practice concepts (stuff Recitation 1).first step, together, setting project recitation.Make sure go Files pane, project icon top right, see working right project/directory.Next, load necessary packages first chunk code name chunk “setup” include = FALSE. can learn chunk options link: https://rmarkdown.rstudio.com/lesson-3.htmlNote: may one way code exercises.","code":""},{"path":"recitation-2.html","id":"part-i","chapter":"2 Recitation 2","heading":"2.1 Part I","text":"Create variable called numbers contains 1 10 characters two\nNAs (may anywhere vector).Omit NA’s numbers convert character variable numeric one. Save\nnew variable numbers. Use pipe operator: %>% |>.Mac shortcut: Shift + Command + MPC shortcut: Ctrl + Shift + MFind mean first 5 elements without typing numbers.Find mean first, third fifth elements without typing numbers.","code":"\nnumbers <- c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", rep(NA, 2))\nnumbers <- numbers |> \n  na.omit() |>\n  as.numeric()\nmean(numbers[1:5])## [1] 3\nmean(c(numbers[1], numbers[3], numbers[5]))## [1] 3"},{"path":"recitation-2.html","id":"part-ii","chapter":"2 Recitation 2","heading":"2.2 Part II","text":"Nice! completed Part .Now let’s load data part II.Data type:Write type variable.names:gender:age:height:weight:vaccinated:age variable numeric variable `vaccinated variable\nlogical variable, typos preventing .Fix typos use .numeric() .logical() convert .Summarize data using skimrTable 2.1: Data summaryVariable type: characterVariable type: logicalVariable type: numericUsing pipe operator, omit NAs weight variable find mean.Challenge! Take subset data vaccinated find \nmean age using [], $ %>%.","code":"\ndata_vacc <- read_csv(\"path/to/data_vacc.csv\")\ndata_vacc$age[1] <- 57\ndata_vacc$age <- as.numeric(data_vacc$age)\n\ndata_vacc$vaccinated[3] <- FALSE\ndata_vacc$vaccinated <- as.logical(data_vacc$vaccinated)\nskimr::skim(data_vacc)\ndata_vacc$weight %>%\n na.omit() %>%\n mean()## [1] 495\ndata_vacc[data_vacc$vaccinated == TRUE, ]$age %>%\n mean()## [1] 42.66667"},{"path":"recitation-2.html","id":"part-iii","chapter":"2 Recitation 2","heading":"2.3 Part III","text":"part, install MASS package call use session.Pull birthwt data frame assign object personal environment.Explore around! Make answer 2-3 (using pipes functions ’ve come across far) questions interest share approach class!","code":"\ninstall.packages(\"MASS\")\nlibrary(MASS)\nbwt = birthwt\nView(bwt)"}]
